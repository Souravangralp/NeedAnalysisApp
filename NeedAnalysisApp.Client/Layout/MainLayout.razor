@using NeedAnalysisApp.Client.Repositories.Interfaces
@using System.Security.Claims
@inherits LayoutComponentBase

<MudThemeProvider />
<MudPopoverProvider />
<MudDialogProvider />
<MudSnackbarProvider />
<MudLayout>
    <MudAppBar Elevation="1">
        <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" OnClick="@((e) => DrawerToggle())" />
        <MudText Typo="Typo.h5" Class="ml-3">Application</MudText>
        <MudSpacer />
        <AuthorizeView>
            <Authorized>
                <MudAvatar>
                    <MudImage Src=@ImageUrl></MudImage>
                </MudAvatar>
            </Authorized>
        </AuthorizeView>
    </MudAppBar>
    <MudDrawer @bind-Open="_drawerOpen" ClipMode="DrawerClipMode.Always" Elevation="2">
        <NavMenu />
    </MudDrawer>
    <MudMainContent Class="mt-16 pa-4">
        @Body
    </MudMainContent>
</MudLayout>


<div id="blazor-error-ui">
    An unhandled error has occurred.
    <a href="" class="reload">Reload</a>
    <a class="dismiss">🗙</a>
</div>

@code {
    [Inject] AuthenticationStateProvider _persistentAuthenticationStateProvider { get; set; } = null!;

    // [Inject] HttpClient HttpClient { get; set; } = null!;
    [Inject] NavigationManager _navigationManager { get; set; } = null!;

    public string ImageUrl { get; set; } = "https://randomuser.me/api/portraits/women/47.jpg";

    private bool _drawerOpen = true;

    private void DrawerToggle()
    {
        _drawerOpen = !_drawerOpen;
    }

    protected async override void OnInitialized()
    {
        // var _hubConnection = ConfigureHub();

        // _hubConnection.StartAsync();

        // // var currentUser = await _persistentAuthenticationStateProvider.GetAuthenticationStateAsync();

        // var currentUser = await GetCurrentUser(); 

        // await _hubConnection.SendAsync(nameof(IBlazingChatHubServer.SetUserOnline), currentUser);

        // StateHasChanged();
    }
}


