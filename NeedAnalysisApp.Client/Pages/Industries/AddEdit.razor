@using NeedAnalysisApp.Client.Repositories.Interfaces
@using NeedAnalysisApp.Shared.Common
@using NeedAnalysisApp.Shared.Dto
@inject ISnackbar Snackbar;
@inject IIndustryClientService industryService;

<MudDialog>
    <DialogContent>
        <MudTextField @bind-Value="Model.Name" Label="Name" />
        <MudTextField @bind-Value="Model.Code" Label="Code" />
        <MudTextField @bind-Value="Model.Description" Label="Description" />
        @if (!string.IsNullOrWhiteSpace(Model.UniqueId))
        {
            <MudSwitch @bind-Value="Model.IsActive" Color="Color.Primary" Label="Active"></MudSwitch>
        }
    </DialogContent>
    <DialogActions>
        <MudButton EndIcon="@Icons.Material.Outlined.Cancel" Color="Color.Default" OnClick="Cancel">Cancel</MudButton>
        <MudButton EndIcon="@Icons.Material.Outlined.Save" Color="Color.Success" OnClick="Save">Save</MudButton>
    </DialogActions>
</MudDialog>

@code
{
    [Parameter]
    public IndustryDto? Model { get; set; }

    [CascadingParameter]
    private MudDialogInstance MudDialog { get; set; } = null!;

    private void Cancel() => MudDialog.Cancel();

    private async void Save()
    {
        if (string.IsNullOrWhiteSpace(Model.UniqueId))
        {
            var result = await industryService.Create(Model);

            if (!result.Success && result.Errors.Any())
            {
                foreach (var error in result.Errors)
                {
                    Snackbar.Add(error.Message, Severity.Error);
                }
            }
            else
            {
                Snackbar.Add("Industry Added", Severity.Success);

                MudDialog.Close();
            }
        }
        else
        {
            var result = await industryService.Update(Model);

            if (!result.Success && result.Errors.Any())
            {
                foreach (var error in result.Errors)
                {
                    Snackbar.Add(error.Message, Severity.Error);
                }
            }
            else
            {
                Snackbar.Add("Industry Updated", Severity.Success);

                MudDialog.Close();
            }
        }
    }

    protected override async Task OnInitializedAsync()
    {
        if (Model is null)
        {
            MudDialog.SetTitle("Add new industry");

            Model = new IndustryDto() { Name = "", Code = "", Description = "", IsActive = true };
        }
        else
        {
            MudDialog.SetTitle($"Edit : {Model.Name}");
        }

        StateHasChanged();
    }
}